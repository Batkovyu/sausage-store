
stages:
   - build
   - release
   - deploy
   - notify

build-frontend:
  stage: build
  only:
    changes:
      - frontend/**/*
  script:
    - echo JOB_ID_FRONT=$CI_JOB_ID >> front.env
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    reports:
      dotenv: front.env
    paths:
      - frontend/dist/frontend

upload-frontend-release:
  stage: release
  only:
    changes:
      - frontend/**/*
  needs:
    - build-frontend
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - >
      curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}"
      --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/repository/09-sausage-store-batkov-yuriy-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz

deploy:
  stage: deploy
  environment:
    name: production
    url: http://84.252.128.3/
  script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - ssh-keyscan ${DEV_HOST} >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s " < ./frontend/deploy.sh

# TODO:
# 1. implement generic notification templates
# 2. implement failed\success notifications (depends on test results)
# 3. implement cool slack message template

slack-notification-frontend:
  stage: notify
  only:
    changes:
      - frontend/**/*
    variables:
      - '$CI_COMMIT_MESSAGE =~ /send notification/'
  script:
    - |-
        DATA=$(cat << JSON
        {
          "text":"YB - Вышла новая версия frontend сосисочной — ${VERSION}. Скачать frontend можно по ссылке — <${NEXUS_REPO_URL}/repository/09-sausage-store-batkov-yuriy-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz|Frontend ${VERSION}>"
        }
        JSON
        )
    - echo "$DATA"
    #- >
    #  curl
    #  --request POST
    #  --header "Content-type: application/json"
    #  --data "${DATA}"
    #  "${SLACK_WEBHOOK}"
