include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
#
# Commented Security related lines to speed up the deploy
#
#  - template: Security/Container-Scanning.gitlab-ci.yml
#  - template: Security/SAST.gitlab-ci.yml
#  - local: '/.gitlab-ci/.SAST.frontend.yml'

#variables:
#  SAST_EXCLUDED_ANALYZERS: "spotbugs,semgrep"

#container_scanning:
#  variables:
#    CS_IMAGE: $CI_REGISTRY_IMAGE/sausage-frontend:$VERSION
#    GIT_STRATEGY: fetch
#    CS_DOCKERFILE_PATH: frontend/Dockerfile

stages:
   - build
   - test
   - release
   - deploy
   - notify

build-frontend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.1-debug
    entrypoint: [""]
  variables:
    CACHE_TTL: 2190h0m0s # three months
    IMAGE_NAME: sausage-frontend
    CONTEXT: "${CI_PROJECT_DIR}/frontend"
  script:
    - >
      /kaniko/executor
      --build-arg VERSION=$VERSION
      --context "${CONTEXT}/"
      --dockerfile "${CONTEXT}/Dockerfile-nginx"
      --destination "${CI_REGISTRY_IMAGE}/$IMAGE_NAME:$VERSION"
      --destination "${CI_REGISTRY_IMAGE}/$IMAGE_NAME:latest"
      --cache=true
      --cache-repo ${CI_REGISTRY_IMAGE}/$IMAGE_NAME
      --cache-ttl $CACHE_TTL

deploy-frontend:
  stage: deploy
  image: alpine:3.15.0
  script:
    - apk add openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - ssh-keyscan ${DEV_HOST} >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - scp ./docker-compose.yml ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/docker-compose.yml
    - scp ./frontend/nginx.tmpl ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/nginx.tmpl

    - >
      ssh ${DEV_USER}@${DEV_HOST}
      "docker compose --file ~/docker-compose.yml --profile frontend-only up --pull=always --detach --force-recreate frontend"

# TODO:
# 1. implement generic notification templates
# 2. implement failed\success notifications (depends on test results)
# 3. implement cool slack message template

slack-notification-frontend:
  stage: notify
  only:
    variables:
      - '$CI_COMMIT_MESSAGE =~ /send notification/'
  script:
    - |-
        DATA=$(cat << JSON
        {
          "text":"YB - Вышла новая версия frontend сосисочной — ${VERSION}. Скачать frontend можно по ссылке — <${NEXUS_REPO_URL}/repository/09-sausage-store-batkov-yuriy-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz|Frontend ${VERSION}>"
        }
        JSON
        )
    - echo "$DATA"
    #- >
    #  curl
    #  --request POST
    #  --header "Content-type: application/json"
    #  --data "${DATA}"
    #  "${SLACK_WEBHOOK}"
