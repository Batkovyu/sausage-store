
stages:
   - build
   - release
   - deploy
   - notify

build-backend:
  stage: build
  only:
    changes:
      - backend/**/*
  script:
    - echo JOB_ID_BACK=$CI_JOB_ID >> back.env
    - cd backend
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -Dversion.application=${VERSION}
  artifacts:
    reports:
      dotenv: back.env
    paths:
      - ${CI_PROJECT_DIR}/.m2/
      - backend/target/sausage-store-${VERSION}.jar

upload-backend-release:
  stage: release
  only:
    changes:
      - backend/**/*
  needs:
    - build-backend
  script:
    - cd backend
    - mvn -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -s settings.xml -Dversion.application=${VERSION} -DskipTests deploy

deploy:
  stage: deploy
  environment:
    name: production-back
    url: http://84.252.128.3/
  script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - ssh-keyscan ${DEV_HOST} >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - scp ./backend/sausage-store-backend-user.service ${DEV_BACK_USER}@${DEV_HOST}:/home/${DEV_BACK_USER}/sausage-store-backend-user.service
    - >
      ssh ${DEV_BACK_USER}@${DEV_HOST}
      "export "CURRENT_VERSION=${VERSION}";
      export "VERSION=${VERSION}";
      export "DEV_HOST=${DEV_HOST}";
      export "NEXUS_REPO_URL=${NEXUS_REPO_URL}";
      export "NEXUS_REPO_USER=${NEXUS_REPO_USER}";
      export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";
      export "PSQL_DBNAME=${PSQL_DBNAME}";
      export "PSQL_HOST=${PSQL_HOST}";
      export "PSQL_USER=${PSQL_USER}";
      export "PSQL_PORT=${PSQL_PORT}";
      export "PSQL_PASSWORD=${PSQL_PASSWORD}";
      export "MONGO_USER=${MONGO_USER}";
      export "MONGO_PASSWORD=${MONGO_PASSWORD}";
      export "MONGO_HOST=${MONGO_HOST}";
      export "MONGO_PORT=${MONGO_PORT}";
      export "MONGO_DATABASE=${MONGO_DATABASE}";
      setsid /bin/bash -s " < ./backend/deploy.sh

slack-notification-backend:
  stage: notify
  only:
    changes:
      - backend/**/*
    variables:
      - '$CI_COMMIT_MESSAGE =~ /send notification/'
  script:
    - |-
        DATA=$(cat << JSON
        {
          "text":"YB - Вышла новая версия backend сосисочной — ${VERSION}. Скачать backend можно по ссылке — <${NEXUS_REPO_URL}/repository/09-sausage-store-batkov-yuriy-backend/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar|Backend ${VERSION}>"
        }
        JSON
        )
    #- echo "$DATA"
    #- >
    #  curl
    #  --request POST
    #  --header "Content-type: application/json"
    #  --data "${DATA}"
    #  "${SLACK_WEBHOOK}"
