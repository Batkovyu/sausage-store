include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

#
# Commented Security related lines to speed up the deploy
#
#  - template: Security/Container-Scanning.gitlab-ci.yml
#  - template: Security/SAST.gitlab-ci.yml
#  - local: '/.gitlab-ci/.SAST.backend.yml'

#variables:
#  SAST_EXCLUDED_ANALYZERS: "eslint,nodejs-scan,semgrep"

#container_scanning:
#  variables:
#    CS_IMAGE: $CI_REGISTRY_IMAGE/sausage-backend:$VERSION
#    GIT_STRATEGY: fetch
#    CS_DOCKERFILE_PATH: backend/Dockerfile

stages:
   - build
   - test
   - release
   - deploy
   - notify

# To enable m2 cache for spotbug-sast

#build-m2:
#  stage: build
#  script:
#    - cd backend
#    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -Dversion.application=${VERSION}
#  artifacts:
#    paths:
#      - ${CI_PROJECT_DIR}/.m2/
#      - backend/target/sausage-store-${VERSION}.jar

#build-backend:
#  stage: build
#  image:
#    name: gcr.io/kaniko-project/executor:v1.9.1-debug
#    entrypoint: [""]
#  variables:
#    CACHE_TTL: 2190h0m0s # three months
#    IMAGE_NAME: sausage-backend
#    CONTEXT: "${CI_PROJECT_DIR}/backend"
#  script:
#    - >
#      /kaniko/executor
#      --build-arg VERSION=$VERSION
#      --context "${CONTEXT}/"
#      --dockerfile "${CONTEXT}/Dockerfile"
#      --destination "${CI_REGISTRY_IMAGE}/$IMAGE_NAME:$VERSION"
#      --destination "${CI_REGISTRY_IMAGE}/$IMAGE_NAME:latest"
#      --cache=true
#      --cache-repo ${CI_REGISTRY_IMAGE}/$IMAGE_NAME
#      --cache-ttl $CACHE_TTL

deploy-backend:
  stage: deploy
  image: vault:1.12.1
  script:
    - apk add openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - ssh-keyscan ${DEV_HOST} >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=sausage-store jwt=$CI_JOB_JWT)"

    - scp ./docker-compose.yml ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/docker-compose.yml

    - >
      ssh ${DEV_USER}@${DEV_HOST}
      "export SPRING_DATASOURCE_URL=${PSQL_DATASOURCE};
       export SPRING_DATASOURCE_USERNAME=$(vault kv get -field=spring.datasource.username secret/sausage-store);
       export SPRING_DATASOURCE_PASSWORD=$(vault kv get -field=spring.datasource.password secret/sausage-store);
       export MONGO_USER=$(vault kv get -field=mongo.username secret/sausage-store);
       export MONGO_PASSWORD=$(vault kv get -field=mongo.password secret/sausage-store);
       export MONGO_HOST=${MONGO_HOST};
       export MONGO_PORT=${MONGO_PORT};
       export MONGO_DATABASE=${MONGO_DATABASE};
       export MONGO_RS=${MONGO_RS};
       export SPRING_FLYWAY_ENABLED=${SPRING_FLYWAY_ENABLED};
       export REPORT_PATH=${REPORT_PATH};
       export SPRING_DATA_MONGODB_URI="mongodb://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DATABASE}?replicaSet=${MONGO_RS}&tls=true";
      printenv"

slack-notification-backend:
  stage: notify
  only:
    variables:
      - '$CI_COMMIT_MESSAGE =~ /send notification/'
  script:
    - |-
        DATA=$(cat << JSON
        {
          "text":"YB - Вышла новая версия backend сосисочной — ${VERSION}. Скачать backend можно по ссылке — <${NEXUS_REPO_URL}/repository/09-sausage-store-batkov-yuriy-backend/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar|Backend ${VERSION}>"
        }
        JSON
        )
    #- echo "$DATA"
    #- >
    #  curl
    #  --request POST
    #  --header "Content-type: application/json"
    #  --data "${DATA}"
    #  "${SLACK_WEBHOOK}"
